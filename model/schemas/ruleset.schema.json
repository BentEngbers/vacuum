{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/daveshanley/vacuum/main/model/schemas/ruleset.schema.json",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "documentationUrl": {
      "type": "string",
      "format": "url",
      "errorMessage": "must be a valid URL"
    },
    "rules": {
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "properties": {
              "description": {
                "type": "string"
              },
              "documentationUrl": {
                "type": "string",
                "format": "url",
                "errorMessage": "must be a valid URL"
              },
              "recommended": {
                "type": "boolean"
              },
              "given": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "resolved": {
                "type": "boolean"
              },
              "severity": {
                "$ref": "#/$defs/Severity"
              },
              "message": {
                "type": "string"
              },
              "tags": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "formats": {
                "$ref": "#/$defs/Formats"
              },
              "then": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Then"
                  },
                  {
                    "items": {
                      "$ref": "#/$defs/Then"
                    },
                    "type": "array"
                  }
                ]
              },
              "type": {
                "enum": ["style", "validation"],
                "type": "string",
                "errorMessage": "allowed types are \"style\" and \"validation\""
              }
            },
            "required": ["given", "then"],
            "type": "object",
            "additionalProperties": false,
            "errorMessage": {
              "required": "the rule must have at least \"given\" and \"then\" properties"
            }
          },
          {
            "$ref": "#/$defs/HumanReadableSeverity"
          },
          {
            "type": "boolean"
          }
        ]
      }
    }
  },
  "$defs": {
    "Then": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "field": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "spectral-runtime": "ruleset-function",
          "required": ["function"]
        }
      ]
    },
    "Formats": {
      "$anchor": "formats",
      "type": "array",
      "items": {
        "$ref": "#/$defs/Format"
      },
      "errorMessage": "must be an array of formats"
    },
    "Format": {
      "$anchor": "format",
      "spectral-runtime": "spectral-format",
      "errorMessage": "must be a valid format"
    },
    "DiagnosticSeverity": {
      "enum": [-1, 0, 1, 2, 3]
    },
    "HumanReadableSeverity": {
      "enum": ["error", "warn", "info", "hint", "off"]
    },
    "Severity": {
      "$anchor": "severity",
      "oneOf": [
        {
          "$ref": "#/$defs/DiagnosticSeverity"
        },
        {
          "$ref": "#/$defs/HumanReadableSeverity"
        }
      ],
      "errorMessage": "the value has to be one of: 0, 1, 2, 3 or \"error\", \"warn\", \"info\", \"hint\", \"off\""
    }
  }
}
